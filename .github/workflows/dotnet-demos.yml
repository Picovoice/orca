name: .NET Demos

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/dotnet-demos.yml'
      - 'demo/dotnet/**'
      - '!demo/dotnet/README.md'
  pull_request:
    branches: [ main, 'v[0-9]+.[0-9]+' ]
    paths:
      - '.github/workflows/dotnet-demos.yml'
      - 'demo/dotnet/**'
      - '!demo/dotnet/README.md'

defaults:
  run:
    working-directory: demo/dotnet/OrcaDemo

jobs:
  build-github-hosted:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
    - uses: actions/checkout@v3

    - name: Set up .NET 8.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Package restore
      run: dotnet restore

    - name: .NET build file demo
      run: dotnet build -c FileDemo.Release

    - name: .NET build streaming demo
      run: dotnet build -c StreamingDemo.Release

    - name: Run .NET file demo
      run: >
        dotnet run -c FileDemo.Release --
        --access_key ${{secrets.PV_VALID_ACCESS_KEY}}
        --language en
        --gender female
        --text "Hello, I am Orca!"
        --output_path ./tmp.wav

    - name: Run .NET streaming demo
      run: >
        dotnet run -c StreamingDemo.Release --
        --access_key ${{secrets.PV_VALID_ACCESS_KEY}}
        --language en
        --gender female
        --text_to_stream "Hello, I am Orca!"

  build-self-hosted:
    runs-on: ${{ matrix.machine }}

    strategy:
      matrix:
        machine: [ rpi3-32, rpi3-64, rpi4-32, rpi4-64, rpi5-64, pv-windows-arm64 ]

    steps:
    - uses: actions/checkout@v3

    - name: Package restore
      run: dotnet restore

    - name: .NET build file demo
      run: dotnet build -c FileDemo.Release

    - name: .NET build streaming demo
      run: dotnet build -c StreamingDemo.Release

    - name: Run .NET file demo
      run: >
        dotnet run -c FileDemo.Release --
        --access_key ${{secrets.PV_VALID_ACCESS_KEY}}
        --language en
        --gender female
        --text "Hello, I am Orca!"
        --output_path ./tmp.wav

    - name: Run .NET streaming demo
      run: >
        dotnet run -c StreamingDemo.Release --
        --access_key ${{secrets.PV_VALID_ACCESS_KEY}}
        --language en
        --gender female
        --text_to_stream "Hello, I am Orca!"
